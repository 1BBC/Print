=head1 NAME

  Osbb managment module

=cut


use strict;
use warnings FATAL => 'all';

use Osbb::db::Osbb;
use Abills::Base qw/convert _bp/;
use JSON;
use Users;
use Multidoms;
use Address;


our(
  %lang,
  $html,
  $admin,
  $users,
  $db,
  %conf,
  %permissions,
  %ADMIN_REPORT,
  %err_strs
);

my $Osbb = Osbb->new($db, $admin, \%conf);
my $User = Users->new($db, $admin, \%conf);

if (form_purchase_module({
  HEADER          => $users->{UID},
  MODULE          => 'Multidoms',
  REQUIRE_VERSION => 1.06
})) {
  exit;
}



#our %space_type = (
#  0  => '',
#  1  => $lang{COMMERCIAL}
#);

require Osbb::User_portal;
#require Osbb::Quick_reports;

if($permissions{3}) {
  require Osbb::Reports;
}

if($permissions{4}) {
  require Osbb::Configure;
  require Osbb::Import;
}

if(%ADMIN_REPORT) {
  require Osbb::Periodic;
}


#**********************************************************
=head2 osbb_user($attr)

=cut
#**********************************************************
sub osbb_user {
  return 0 unless $FORM{UID};
  
  $Osbb->{debug} = 1;
    delete $Osbb->{admin};
      delete $Osbb->{db};
      delete $Osbb->{conf};
      delete $Osbb->{COL_NAMES_ARR};
    
      _bp('$OBJECT', $Osbb, { EXIT => 0 });
      
      
  
  my $tp_info = $Osbb->user_info($FORM{UID});
  _error_show($Osbb);
  
  my %TEMPLATE_ARGS = %{$tp_info};
  
  if ( $FORM{add} ) {
    $Osbb->user_add({ %FORM });
    show_result($Osbb, $lang{ADDED});
  }
  elsif ( $FORM{change} ) {
    $Osbb->user_change({ %FORM });
    show_result($Osbb, $lang{CHANGED});
  }
  elsif ( $FORM{del} && $FORM{COMMENTS} ) {
    $Osbb->user_del({ ID => $FORM{del}, COMMENTS => $FORM{COMMENTS} });
    show_result($Osbb, $lang{DELETED});
  }
  
  $html->tpl_show(
    _include('osbb_user', 'Osbb'),
    {
      %TEMPLATE_ARGS,
      %FORM,
      SUBMIT_BTN_ACTION => ($FORM{chg}) ? 'change' : 'add',
      SUBMIT_BTN_NAME   => ($FORM{chg}) ? $lang{CHANGE} : $lang{ADD},
    }
  );
  
  
  return 1;
}

#**********************************************************
=head2 osbb_user_list($attr)

=cut
#**********************************************************
sub osbb_users_list {

  if ($FORM{search}){
    $html->message('warn', $lang{ERROR}, $lang{NOT_IMPLEMENTED});
  }
  elsif ($FORM{import}){
    return &_osbb_users_import;
  }
  
  result_former({
    INPUT_DATA      => $Osbb,
    FUNCTION        => 'user_list',
    BASE_FIELDS     => 0,
    DEFAULT_FIELDS  => 'FIO,DEPOSIT,ADDRESS_FLAT',
    FUNCTION_FIELDS => 'change,form_payments',
    MULTISELECT     => ($permissions{0}{7}) ? 'IDS:uid:internet_users_list' : '',
    EXT_TITLES      => {
      living_space   => $lang{LIVING_SPACE},
      utility_room   => $lang{UTILITY_ROOM},
      apartment_area => $lang{TOTAL_SPACE},
      commercial     => $lang{COMMERCIAL}
    },
    SELECT_VALUE    => {
      commercial    => {
        0 => '',
        1 => $lang{COMMERCIAL}
      }
    },
#    FILTER_COLS  => {
#      ip_num   => 'int2ip',
#    },
    TABLE           => {
      width      => '100%',
      caption    => "$lang{OSBB} - $lang{USERS}",
      qs         => $pages_qs,
      ID         => 'OSBB_USERS_LIST',
      #header     => $status_bar,
      SELECT_ALL => ($permissions{0}{7}) ? "internet_users_list:IDS:$lang{SELECT_ALL}" : undef,
      EXPORT     => 1,
      IMPORT     => "$SELF_URL?qindex=$index&import=1&header=2",
      MENU       =>
      "$lang{ADD}:index=" . get_function_index('dv_wizard_user') . ':add'
        . ";$lang{SEARCH}:index=$index&search_form=1:search"
    },
    MAKE_ROWS    => 1,
    SEARCH_FORMER=> 1,
    MODULE       => 'Osbb',
    TOTAL        => 1,
    #SHOW_MORE_THEN=>1,
    #OUTPUT2RETURN =>1
  });

  return 1;
}

#**********************************************************
=head2 osbb_registration($attr)

=cut
#**********************************************************
sub osbb_registration {
  my ($attr) = @_;

  if ($FORM{reg}) {
    if($FORM{EMAIL} !~ /^(([^<>()[\]\\.,;:\s\@\"]+(\.[^<>()[\]\\.,;:\s\@\"]+)*)|(\".+\"))\@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/) {
      $Osbb->{MESSAGE} = $html->message('err', $lang{ERROR}, "$lang{ERR_WRONG_EMAIL}");
    }
    elsif ($conf{REGISTRATION_CHECK_PHONE}
      && (!$FORM{PHONE} || ($conf{PHONE_FORMAT} && $FORM{PHONE} !~ /$conf{PHONE_FORMAT}/ )) ) {
      $Osbb->{MESSAGE} = $html->message('err', $lang{ERROR}, $lang{ERR_WRONG_PHONE}. (($conf{PHONE_FORMAT}) ? ' '.human_exp($conf{PHONE_FORMAT}) : q{}));
    }
    elsif (! $FORM{ACCEPT_RULES}) {
      $html->message('err', $lang{ERROR}, "$lang{ERR_ACCEPT_RULES} -");
    }
    else {
      if (form_purchase_module({
        HEADER          => $user->{UID} || $html->{show_header},
        MODULE          => 'Multidoms',
        REQUIRE_VERSION => 1.01
      })) {
        exit;
      }
  
      my $Multidoms = Multidoms->new($db, $admin, \%conf);
      $Multidoms->multidoms_domain_add({ NAME => "$FORM{PHONE}" });
      if ($Multidoms->{errno}) {
        $html->message('err', $lang{ERROR}, "$FORM{PHONE} already registred");
      }
      else {
        my $password = mk_unique_value($conf{PASSWD_LENGTH} || 8);
        $admin->add({ %FORM,
          ID          => $FORM{PHONE},
          PASSWORD    => $password,
          NAME        => $FORM{FIO},
          A_LOGIN     => $FORM{PHONE},
          DOMAIN_ID   => $Multidoms->{INSERT_ID},
        });
        
        if ($admin->{errno}) {
          $html->message('err', $lang{ERROR}, "[$admin->{errno}] $err_strs{$admin->{errno}}");
        }
        else {
          $Multidoms->admin_change({
            AID       => $admin->{AID},
            DOMAIN_ID => $Multidoms->{INSERT_ID},
          });
          
          $admin->set_permissions({
            0 => {0 => 1, 1 => 1, 2 => 1, 3 => 1, 4 => 1, 5 => 1, 6 => 1},
            1 => {0 => 1, 1 => 1, 2 => 1, 3 => 1, 4 => 1},
            2 => {0 => 1, 1 => 1, 2 => 1, 3 => 1},
            3 => {0 => 1, 1 => 1, 2 => 1, 3 => 1},
            4 => {0 => 1, 1 => 1, 2 => 1, 3 => 1},
            6 => { 0 => 1 },
            7 => { 0 => 1 },
            8 => { 0 => 1 },
          }, {});
          
          my $Address = Address->new( $db, $admin, \%conf );
          $Address->district_add({
            DOMAIN_ID => $Multidoms->{INSERT_ID},
            NAME      => $FORM{PHONE},
            CITY      => $FORM{CITY},
          });
          
          $Address->street_add({
            DISTRICT_ID  => $Address->{INSERT_ID},
            NAME         => $FORM{ADDRESS_STREET},
          });
          
          $Address->build_add({
            STREET_ID => $Address->{INSERT_ID},
            NUMBER    => $FORM{ADDRESS_BUILD},
          });
          
          _error_show($Address);
          
          if ($Multidoms->{errno}) {
            $html->message('err', $lang{ERROR}, "Помилка Multidoms");
          }
          elsif ($Address->{errno}) {
            $html->message('err', $lang{ERROR}, "Помилка Address");
          }
          else {
            my $message = $html->tpl_show(_include('osbb_reg_complete_mail', 'Osbb'), { %$Osbb, %FORM, PASSWORD => "$password" }, { OUTPUT2RETURN => 1 });
            sendmail("$conf{ADMIN_MAIL}", "$FORM{EMAIL}", "$lang{REGISTRATION}", "$message", "$conf{MAIL_CHARSET}", '');
            $html->message('info', "Реєстрація успішна.", "На пошту вам надіслано листа з інформацію про наступні дії.");
            return 1;
          }
        }
      }
      _error_show($admin);
      _error_show($Multidoms);
    }
  }
  
  $html->tpl_show(_include('osbb_registration', 'Osbb'), { %$Osbb, %$attr, %FORM }, { ID => 'OSBB_REGISTRATION' });

  return 0;
}

#**********************************************************
=head2 osbb_simple_build_select()

=cut
#**********************************************************
sub osbb_simple_build_select {
  my ($attr) = @_;
  
  require Address;
  Address->import();
  my $Address = Address->new($db, $admin, \%conf);
  
  my $builds_list = $Address->build_list({
    NUMBER        => '_SHOW',
    DISTRICT_ID   => '_SHOW',
    DISTRICT_NAME => '_SHOW',
    STREET_ID     => '_SHOW',
    STREET_NAME   => '_SHOW',
    
    COLS_NAME => 1,
    PAGE_ROWS => 10000
  });
  _error_show($Address);
  
  my @full_name_builds_list = map {
    {
      id   => $_->{id},
      name =>  join (', ', $_->{street_name}, $_->{number})
    }
  } @$builds_list;
  return $html->form_select('LOCATION_ID', {
      SELECTED    => $attr->{LOCATION_ID} || $FORM{LOCATION_ID} || '',
      SEL_LIST    => \@full_name_builds_list,
    
      NO_ID       => 1,
      %{
      $attr->{AUTO_SUBMIT} ? {EX_PARAMS => "data-auto-submit='form'"} : {'' => ''}
      },
    });
}


#**********************************************************
=head2 osbb_add_user()

=cut
#**********************************************************
sub osbb_user_add{
  my ($attr) = @_;
  
  if (!defined($FORM{sub}) || $FORM{sub} eq '' ) {
    $FORM{sub} = 1;
  }
  
  my $active_button->{$FORM{sub}} = { class => 'active' };
  my %nav_tabs = (
    1 => "User",
    2 => "MultyUser",
    3 => "Import",
  );
    
  my $buttons = '';
  foreach( sort { $a <=> $b } keys(%nav_tabs) ){
    $buttons .= $html->li( $html->button( $nav_tabs{$_}, "index=$index&sub=$_" ), $active_button->{$_} )
  }
  
  print $html->element( 'div',
    $html->element( 'ul', $buttons, { class => 'nav navbar-nav' }) ,
    { class => 'navbar navbar-default' } );
  
  if($FORM{sub} == 3) {
    #TODO
    $html->message('info', "Under construction");
    return 1;
  }
  elsif($FORM{sub} == 2) {
    #TODO
    $html->message('info', "Under construction");
    return 1;
  }
  else {
    if ($FORM{add}){
      $User->add({ %FORM,  CREATE_BILL => 1, LOGIN => "$FORM{LOCATION_ID}_$FORM{ADDRESS_FLAT}" });
      _error_show($User);
      if ($User->{errno}){
        $html->message('err', "$lang{ERROR}");
      }
      else {
        $User->pi_add({ %FORM, UID => $User->{INSERT_ID} });
        _error_show($User);
        $Osbb->user_add({ %FORM, UID => $User->{INSERT_ID}});
        _error_show($Osbb);
        if($Osbb->{errno} && $User->{errno}) {
          $html->message('err', "$lang{ERROR}");
        }
        else {
          $html->message('info', "$lang{SUCCESS}", "$lang{ADDED}");
        }
      }
    }
  
    my $build_sel = osbb_simple_build_select();
    $html->tpl_show(_include('osbb_form_user_add', 'Osbb'), { BUILD_SEL => $build_sel });
  }
  return 1;
}

#**********************************************************
=head2 osbb_payments_add()

=cut
#**********************************************************
sub osbb_payments_add{
  if (!defined($FORM{sub}) || $FORM{sub} eq '' ) {
    $FORM{sub} = 1;
  }
  
  my $active_button->{$FORM{sub}} = { class => 'active' };
  my %nav_tabs = (
    1 => "Pay",
    2 => "Payments",
    3 => "Import",
  );
    
  my $buttons = '';
  foreach( sort { $a <=> $b } keys(%nav_tabs) ){
    $buttons .= $html->li( $html->button( $nav_tabs{$_}, "index=$index&sub=$_" ), $active_button->{$_} )
  }
  
  print $html->element( 'div',
    $html->element( 'ul', $buttons, { class => 'nav navbar-nav' }) ,
    { class => 'navbar navbar-default' } );
  
  if($FORM{sub} == 3) {
    #TODO
    $html->message('info', "Under construction");
    return 1;
  }
  elsif($FORM{sub} == 2) {
    #TODO
    $html->message('info', "Under construction");
    return 1;
  }
  else {
    if ($FORM{add} && $FORM{SUM}){
      $FORM{SUM} =~ s/,/\./g;
      if ($FORM{SUM} !~ /[0-9\.]+/) {
        $html->message( 'err', $lang{ERROR}, "$lang{ERR_WRONG_SUM} SUM: $FORM{SUM}");
        return 0;
      }
      
      my $user_info = $User->info($FORM{UID});

      $Osbb->payments_add({ %FORM, BILL_ID => $user_info->{BILL_ID} });
      $Osbb->{debug} = 1;
      _error_show($Osbb);
      if (!$Osbb->{errno}) {
        $html->message('info', "$lang{ADDED}");
        delete $FORM{SUM};
      }
    }
    my $Address = Address->new($db, $admin, \%conf);
    my $builds_list = $Address->build_list({ COLS_NAME => 1, PAGE_ROWS => 1 });
    _error_show($Address);
    
    $FORM{LOCATION_ID} = $FORM{LOCATION_ID} || $builds_list->[0]->{id};
    my $build_sel = osbb_simple_build_select({ AUTO_SUBMIT => 1 , %FORM});
    my $users_sel = _osbb_user_select();
    my $ptype_sel = _osbb_payments_type_select();
      
    if (!$FORM{DATE}) {
      $FORM{DATE} = $DATE;
    }
      
    $html->tpl_show(_include('osbb_form_payments_add', 'Osbb'), {
            PTYPE_SEL => $ptype_sel,
            BUILD_SEL => $build_sel,
            USERS_SEL => $users_sel,
            %FORM
            });
  }
  return 1;
}

#**********************************************************
=head2 _osbb_payments_type_select()

=cut
#**********************************************************
sub _osbb_payments_type_select {
  my ($attr) = @_;
  
  use Payments;
  my $Payments = Payments->new($db, $admin, \%conf);
  my $ptype_list = $Payments->payment_type_list({
    COLS_NAME => 1,
    SORT      => 'id',
  });
  _error_show($Payments);
  
  return $html->form_select('METHOD', {
      SELECTED    => $FORM{METHOD} || '',
      SEL_LIST    => $ptype_list,
    
      NO_ID       => 1,
  });
}

#**********************************************************
=head2 _osbb_user_select()

=cut
#**********************************************************
sub _osbb_user_select {
  my ($attr) = @_;
  
  my $users_list = $User->list({
    LOCATION_ID   => $FORM{LOCATION_ID},
    FIO           => '_SHOW',
    ADDRESS_FLAT  => '_SHOW',
    UID       => '_SHOW',
    COLS_NAME     => 1,
    PAGE_ROWS     => 10000
  });
  _error_show($User);
  my @full_name_users_list = map {
    {
      id        => $_->{uid},
      name      =>  join (', ', $_->{address_flat}, $_->{fio})
    }
  } @$users_list;
  
  return $html->form_select('UID', {
      SELECTED    => $FORM{UID} || '',
      SEL_LIST    => \@full_name_users_list,
    
      NO_ID       => 1,
      SEL_OPTIONS => { '' => '' },
  });
}




1;
